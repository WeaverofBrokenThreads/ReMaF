{% extends "layout.html.twig" %}

{% block includes %}
	{{ parent() }}
	<script src="{{ asset('map/OpenLayers.js') }}"></script>
	<script src="{{ asset('map/map.js') }}"></script>
{% endblock %}

{% block content %}
<div class="queue">
	<h3>{{ 'realm.history'|trans({},"politics")|title }}</h3>
	<dl>
	{% include "Events/shortLog.html.twig" with {'events':realm.log.events} %}
	</dl>
</div>

<div style="float:right">
{#	&nbsp;<ul id="loadlist" class="shortlist" style="display:inline"></ul> #}
	<div id="map" style="min-width:30em;min-height:30em;margin-left:2em"></div>
</div>
<div id="sd_anchor" style="margin-right:1em;height:30em;float:right"></div>
<div id="sd" class="hidden" title="dummy"></div>

<h2>{{ realm.formalname }}</h2>

{% if restorable %}
	<div id="restore_wrapper">
		{{ 'diplomacy.restore.description'|trans({}, "politics") }}
		<button id="restorerealm">{{ 'diplomacy.restore.link'|trans({},"politics") }}</button>
	</div>
{% endif %}

<dl>
	<dt>{{ 'realm.name'|trans({},"politics") }}</dt>
	<dd>{{ realm.name }}</dd>
	<dt>{{ 'realm.designation.title'|trans({},"politics") }}</dt>
	{% if realm.designation %}<dd>{{ ('realm.designation.'~realm.designation.name)|trans({},"politics") }}</dd>{% else %}<dd>{{ ('realm.type.'~realm.type)|trans({},"politics") }}</dd>{% endif %}
	<dt>{{ 'realm.type.title'|trans({},"politics") }}</dt>
	<dd>{{ ('realm.type.'~realm.type)|trans({},"politics") }}</dd>
	<dt>{{ 'realm.capital.name0'|trans({},"politics") }}</dt>
	<dd>{% if realm.capital %}{{ link(realm.capital) }}{% else %}-{% endif %}</dd>
	<dt>{{ 'realm.ruler'|trans({'count':realm.findrulers.count},"politics") }}</dt>
	<dd><ul class="shortlist">
		{% for ruler in realm.findrulers %}
			<li>{{ link(ruler) }}</li>
		{% else %}
			<li>-</li>
		{% endfor %}
	</ul></dd>
	{% if realm.language %}
		<dt>{{ 'realm.language'|trans({},"politics") }}</dt>
		<dd>{{ realm.language }}</dd>
	{% endif %}
	<dt>{{ 'realm.faith.view'|trans({}, "politics") }}</dt>
	{% if realm.faith %}
		<dd>{{ link(realm.faith) }}</dd>
	{% else %}
		<dd>{{ 'realm.faith.none'|trans({}, "politics")|raw }}</dd>
	{% endif %}
</dl>

{% if realm.ultimate %}
	{% if realm.inferiors is empty %}
		<p>{{ 'status.realm.independent'|trans({"%name%":link(realm)}, "politics")|raw }}</p>
	{% else %}
		<p>{{ 'status.realm.ultimate'|trans({"%name%":link(realm)}, "politics")|raw }}</p>
	{% endif %}
{% else %}
	{% if realm.superior.ultimate %}
		<p>{{ 'status.realm.second'|trans({"%name%":link(realm), "%ultimate%":link(realm.superior)}, "politics")|raw }}</p>
	{% else %}
		<p>{{ 'status.realm.inferior'|trans({"%name%":link(realm), "%superior%":link(realm.superior), "%ultimate%":link(realm.findultimate)}, "politics")|raw }}</p>
	{% endif %}
{% endif %}

{% if realm.inferiors is not empty %}
	{{ 'status.realm.myinferiors'|trans({"%name%":link(realm)},"politics")|raw }}:
	<ul class="shortlist">
		{% for subrealm in realm.inferiors %}
			{% if subrealm.active %}<li>{{ link(subrealm) }}</li>{% endif %}
		{% endfor %}
	</ul>
	{{ 'status.realm.deadinferiors'|trans({"%name%":link(realm)},"politics")|raw }}:
	<ul class="shortlist">
		{% for subrealm in realm.inferiors %}
			{% if not subrealm.active %}<li>{{ link(subrealm) }}</li>{% endif %}
		{% endfor %}
	</ul>
{% endif %}

{% if realm.superior or realm.inferiors is not empty %}
	<p><a href="{{ path('maf_realm_hierarchy', {'realm':realm.id}) }}">{{ 'viewdetails'|trans|title }}</a></p>
{% endif %}

<h3>{{ 'realm.details'|trans({},"politics")|title }}</h3>
<dl>
	<dt>{{ 'estate'|trans({'count':settlements}) }}</dt>
	<dd>{{ settlements }}</dd>
	<dt>{{ 'settlement.population'|trans }}</dt>
	<dd>{{ population }}</dd>
	<dt>{{ 'realm.size'|trans({},"politics") }}</dt>
	<dd>{{ area|area }}</dd>
	<dt>{{ 'soldier.noble'|trans({'count':nobles}) }}</dt>
	<dd>{{ nobles }}</dd>
</dl>

<h3>{{ 'realm.positions.name'|trans({},"politics")|title }}</h3>
<dl>
	{% for position in realm.positions %}
		{% for rank in realm.positionRanks %}
			{% if position.rank is same as(rank) %}
				{% if not position.retired %}
				<dt><b>
					{% if position.ruler and position.name == 'ruler' %}
						{{ ('realm.title.male.'~realm.type)|trans({},"politics")|title }} / {{ ('realm.title.female.'~realm.type)|trans({},"politics")|title }}
					{% else %}
						{{ position.name }} {% if position.fName %}/ {{ position.fName }}{% endif %}
					{% endif %}
				</b></dt>
				<dd>	<br />
					{{ position.description|markdown_to_html|striptags('<strong><em><b><i><p><br><ul><ol><li><h1><h2><blockquote>')|wikilinks }}
					<br />
					{% if position.ruler %}<i>{{ 'realm.positions.ruler'|trans({}, "politics") }}</i><br>{% endif %}
					{{ 'realm.positions.holder'|trans({'count':position.holders.count},"politics") }}:
					<ul class="shortlist" style="display:inline">
						{% for holder in position.holders %}
							<li>{{ link(holder) }}</li>
						{% else %}
							<li>{{ 'nobody'|trans }}</li>
						{% endfor %}
					</ul>
					<br />
					{% if position.type %}{{ 'position.type'|trans({},"politics") }}: {{ ('position.types.'~position.type.name)|trans({},"politics") }}{% endif %}
				</dd>
				{% endif %}
			{% endif %}
		{% endfor %}
	{% endfor %}
</dl>

<h3>{{ 'diplomacy.other'|trans({},"politics")|title }}</h3>
<table>
<thead>
</thead>
<tbody>
{% for relation in diplomacy %}
	{% if relation.target.active %}
		<tr>
			<td>{{ link(relation.target) }}</td>
			<td>
				{% if relation.we %}
					{{ ('diplomacy.status.'~relation.we)|trans({},"politics") }}
				{% else %}
					-
				{% endif %}
			</td>
			<td>
				{% if relation.they %}
					{{ ('diplomacy.status.'~relation.they)|trans({},"politics") }}
				{% else %}
					-
				{% endif %}
			</td>
			<td>
				{% if character %}
					<a href="{{ path('maf_realm_viewrelations', {'realm':realm.id, 'target':relation.target.id}) }}">{{ 'diplomacy.report.link'|trans({},"politics") }}</a>
				{% endif %}
			</td>
		</tr>
	{% endif %}
{% endfor %}
</tbody>
</table>

{% if realm.description is not null and realm.description.text is not null %}
	<h3>{{ 'realm.description.title'|trans({},"politics")|title }}</h3>
	{{ realm.description.text|markdown_to_html|striptags('<strong><em><b><i><p><br><ul><ol><li><h1><h2><h3><h4><h5><h6><blockquote><del><table><thead><tr><th><tbody><td><a><dl><dt><dd>')|wikilinks }}
{% elseif realm.description is null and realm.oldDescription is not null %}
	<h3>{{ 'realm.description.title'|trans({},"politics")|title }}</h3>
	{{ realm.oldDescription|markdown_to_html|striptags('<strong><em><b><i><p><br><ul><ol><li><h1><h2><h3><h4><h5><h6><blockquote><del><table><thead><tr><th><tbody><td><a><dl><dt><dd>')|wikilinks }}
{% endif %}

{% endblock %}

{% block jquery %}
	{% if restorable %}
		$("#restorerealm").click(function(){
			$.post("{{ path('maf_realm_restore', {"id":realm.id}) }}", function() {
				$("#restore_wrapper").replaceWith('<div class="success">{{ "diplomacy.restore.success"|trans ({}, "politics")}}</div>');
			});
		});
	{% endif %}
	{% include "element/mapstrings.js.twig" %}
	mapinit('map', false, false, true);
	{% if realmpoly %}
		{% if parentpoly and parentpoly != '' %}
			addoutline('{{ parentpoly }}', '#cccc20', 1, '{{ realm.superior.colourhex}}', 0.3);
		{% endif %}
		{% for sub in subpolygons %}
			{% if sub != '' %}
				addoutline('{{ sub }}', '#b01020', 1, '#000000', 0, 'dash');
			{% endif %}
		{% endfor %}
		addoutline('{{ realmpoly }}', '#cc2030', 2, '{{ realm.colourhex}}', 0.5);
	{% endif %}
{% endblock %}
